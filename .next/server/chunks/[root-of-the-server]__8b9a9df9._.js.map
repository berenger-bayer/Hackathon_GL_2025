{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Documents/Github/Hackathon_GL_2025/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined;\r\n};\r\n\r\nconst prisma = globalForPrisma.prisma ?? new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,MAAM,kBAAkB;AAIxB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Documents/Github/Hackathon_GL_2025/app/patients/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport prisma from '@/lib/prisma';\r\n\r\n// Mettre à jour un patient\r\nexport async function PUT(req: Request, { params }: { params: { id: string } }) {\r\n  const id = params.id;\r\n\r\n  try {\r\n    // Récupérer le corps de la requête\r\n    const body = await req.json();\r\n    const { name, age, diagnosis } = body;\r\n\r\n    // Vérification des données\r\n    if (!name || !age || !diagnosis) {\r\n      return NextResponse.json({ error: 'Données manquantes' }, { status: 400 });\r\n    }\r\n\r\n    // Mettre à jour le patient dans la base de données\r\n    const updatedPatient = await prisma.patient.update({\r\n      where: { id },\r\n      data: { name, age, diagnosis },\r\n    });\r\n\r\n    return NextResponse.json(updatedPatient); // Renvoie le patient mis à jour\r\n  } catch (error) {\r\n    console.error('Erreur mise à jour patient:', error);\r\n    return NextResponse.json({ error: 'Erreur serveur' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,IAAI,GAAY,EAAE,EAAE,MAAM,EAA8B;IAC5E,MAAM,KAAK,OAAO,EAAE;IAEpB,IAAI;QACF,mCAAmC;QACnC,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG;QAEjC,2BAA2B;QAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QAEA,mDAAmD;QACnD,MAAM,iBAAiB,MAAM,+GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACjD,OAAO;gBAAE;YAAG;YACZ,MAAM;gBAAE;gBAAM;gBAAK;YAAU;QAC/B;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,iBAAiB,gCAAgC;IAC5E,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF","debugId":null}}]
}