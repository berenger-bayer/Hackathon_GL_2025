{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/macuser/Documents/GitHub/Hackathon_GL_2025/app/api/patients/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\n// üëâ Tu peux remplacer ceci par une vraie base de donn√©es\nlet patients: any[] = [\n  { id: \"1\", name: \"Jean Dupont\", age: 42, diagnosis: \"Hypertension\" },\n  { id: \"2\", name: \"A√Øcha Zongo\", age: 30, diagnosis: \"Diab√®te\" },\n  // etc.\n];\n\n// üîç GET un patient par ID\nexport async function GET(req: NextRequest, { params }: { params: { id: string } }) {\n  const patient = patients.find((p) => p.id === params.id);\n  if (!patient) {\n    return NextResponse.json({ message: \"Patient non trouv√©\" }, { status: 404 });\n  }\n  return NextResponse.json(patient);\n}\n\n// ‚úèÔ∏è Mettre √† jour un patient\nexport async function PUT(req: NextRequest, { params }: { params: { id: string } }) {\n  try {\n    const updatedData = await req.json();\n    const index = patients.findIndex((p) => p.id === params.id);\n    if (index === -1) {\n      return NextResponse.json({ message: \"Patient non trouv√©\" }, { status: 404 });\n    }\n\n    patients[index] = { ...patients[index], ...updatedData };\n\n    return NextResponse.json(patients[index]);\n  } catch (error) {\n    console.error(\"Erreur PUT:\", error);\n    return NextResponse.json({ message: \"Erreur serveur\" }, { status: 500 });\n  }\n}\n\n// ‚ùå Supprimer un patient (tu l‚Äôas d√©j√† utilis√© dans ton code de suppression)\nexport async function DELETE(req: NextRequest, { params }: { params: { id: string } }) {\n  const index = patients.findIndex((p) => p.id === params.id);\n  if (index === -1) {\n    return NextResponse.json({ message: \"Patient non trouv√©\" }, { status: 404 });\n  }\n\n  patients.splice(index, 1);\n\n  return NextResponse.json({ message: \"Patient supprim√© avec succ√®s\" });\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,0DAA0D;AAC1D,IAAI,WAAkB;IACpB;QAAE,IAAI;QAAK,MAAM;QAAe,KAAK;QAAI,WAAW;IAAe;IACnE;QAAE,IAAI;QAAK,MAAM;QAAe,KAAK;QAAI,WAAW;IAAU;CAE/D;AAGM,eAAe,IAAI,GAAgB,EAAE,EAAE,MAAM,EAA8B;IAChF,MAAM,UAAU,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,EAAE;IACvD,IAAI,CAAC,SAAS;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,IAAI,GAAgB,EAAE,EAAE,MAAM,EAA8B;IAChF,IAAI;QACF,MAAM,cAAc,MAAM,IAAI,IAAI;QAClC,MAAM,QAAQ,SAAS,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,EAAE;QAC1D,IAAI,UAAU,CAAC,GAAG;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC5E;QAEA,QAAQ,CAAC,MAAM,GAAG;YAAE,GAAG,QAAQ,CAAC,MAAM;YAAE,GAAG,WAAW;QAAC;QAEvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;IAC1C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACxE;AACF;AAGO,eAAe,OAAO,GAAgB,EAAE,EAAE,MAAM,EAA8B;IACnF,MAAM,QAAQ,SAAS,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,EAAE;IAC1D,IAAI,UAAU,CAAC,GAAG;QAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IAEA,SAAS,MAAM,CAAC,OAAO;IAEvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAA+B;AACrE","debugId":null}}]
}