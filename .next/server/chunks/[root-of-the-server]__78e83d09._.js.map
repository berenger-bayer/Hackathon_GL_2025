{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/macuser/Documents/GitHub/Hackathon_GL_2025/app/api/patients/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { PrismaClient } from '@prisma/client'\n\nconst prisma = new PrismaClient()\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    // Solution: Accéder directement à params.id sans déstructuration\n    const id = params.id\n\n    if (!id) {\n      return NextResponse.json(\n        { error: \"ID du patient manquant\" },\n        { status: 400 }\n      )\n    }\n\n    const patient = await prisma.patient.findUnique({\n      where: { id }\n    })\n\n    if (!patient) {\n      return NextResponse.json(\n        { error: \"Patient non trouvé\" },\n        { status: 404 }\n      )\n    }\n\n    return NextResponse.json(patient)\n    \n  } catch (error) {\n    console.error(\"Erreur récupération patient:\", error)\n    return NextResponse.json(\n      { error: \"Erreur serveur\" },\n      { status: 500 }\n    )\n  }\n}\n\n// Appliquez la même modification pour PUT et DELETE\nexport async function PUT(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const id = params.id // Accès direct sans déstructuration\n    const data = await request.json()\n\n    // ... reste du code inchangé\n  } catch (error) {\n    // ... gestion des erreurs\n  }\n}\n\nexport async function DELETE(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const id = params.id // Accès direct sans déstructuration\n    // ... reste du code inchangé\n  } catch (error) {\n    // ... gestion des erreurs\n  }\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,iEAAiE;QACjE,MAAM,KAAK,OAAO,EAAE;QAEpB,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,MAAM,OAAO,OAAO,CAAC,UAAU,CAAC;YAC9C,OAAO;gBAAE;YAAG;QACd;QAEA,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqB,GAC9B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiB,GAC1B;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,KAAK,OAAO,EAAE,CAAC,oCAAoC;;QACzD,MAAM,OAAO,MAAM,QAAQ,IAAI;IAE/B,6BAA6B;IAC/B,EAAE,OAAO,OAAO;IACd,0BAA0B;IAC5B;AACF;AAEO,eAAe,OACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,KAAK,OAAO,EAAE,CAAC,oCAAoC;;IACzD,6BAA6B;IAC/B,EAAE,OAAO,OAAO;IACd,0BAA0B;IAC5B;AACF","debugId":null}}]
}