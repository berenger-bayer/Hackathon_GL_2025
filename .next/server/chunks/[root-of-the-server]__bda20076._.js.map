{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/macuser/Documents/GitHub/Hackathon_GL_2025/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\nimport { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nconst prisma = globalForPrisma.prisma ?? new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,MAAM,kBAAkB;AAIxB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/macuser/Documents/GitHub/Hackathon_GL_2025/app/api/patients/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport prisma from '@/lib/prisma';\n\n// GET - Fetch single patient\nexport async function GET(request: Request, { params }: { params: { id: string } }) {\n  try {\n    // Properly destructure after awaiting params\n    const { id } = params;\n\n    if (!id) {\n      return NextResponse.json(\n        { error: 'Patient ID is required' },\n        { status: 400 }\n      );\n    }\n\n    const patient = await prisma.patient.findUnique({\n      where: { id },\n    });\n\n    if (!patient) {\n      return NextResponse.json(\n        { error: 'Patient not found' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json(patient);\n  } catch (error) {\n    console.error('Error fetching patient:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\n// PUT - Update patient\nexport async function PUT(request: Request, { params }: { params: { id: string } }) {\n  try {\n    const { id } = params;\n    const data = await request.json();\n\n    const updatedPatient = await prisma.patient.update({\n      where: { id },\n      data,\n    });\n\n    return NextResponse.json(updatedPatient);\n  } catch (error) {\n    console.error('Error updating patient:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE - Remove patient\nexport async function DELETE(request: Request, { params }: { params: { id: string } }) {\n  try {\n    const { id } = params;\n\n    await prisma.patient.delete({\n      where: { id },\n    });\n\n    return NextResponse.json(\n      { message: 'Patient deleted successfully' },\n      { status: 200 }\n    );\n  } catch (error) {\n    console.error('Error deleting patient:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGO,eAAe,IAAI,OAAgB,EAAE,EAAE,MAAM,EAA8B;IAChF,IAAI;QACF,6CAA6C;QAC7C,MAAM,EAAE,EAAE,EAAE,GAAG;QAEf,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,MAAM,+GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC9C,OAAO;gBAAE;YAAG;QACd;QAEA,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoB,GAC7B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,IAAI,OAAgB,EAAE,EAAE,MAAM,EAA8B;IAChF,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG;QACf,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,iBAAiB,MAAM,+GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACjD,OAAO;gBAAE;YAAG;YACZ;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,OAAO,OAAgB,EAAE,EAAE,MAAM,EAA8B;IACnF,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG;QAEf,MAAM,+GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC1B,OAAO;gBAAE;YAAG;QACd;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA+B,GAC1C;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}