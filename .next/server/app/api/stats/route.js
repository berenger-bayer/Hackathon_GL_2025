(()=>{var e={};e.id=967,e.ids=[967],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},7740:(e,r,t)=>{"use strict";t.d(r,{A:()=>a});let s=require("@prisma/client"),a=global.prisma||new s.PrismaClient},7836:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>g,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>l});var s={};t.r(s),t.d(s,{GET:()=>p});var a=t(6559),n=t(8088),i=t(7719),o=t(2190),u=t(7740);async function p(){try{let e=await u.A.patient.count(),r=await u.A.patient.aggregate({_avg:{age:!0}}),t=await u.A.patient.groupBy({by:["diagnosis"],_count:{diagnosis:!0}});return o.NextResponse.json({totalPatients:e,averageAge:r._avg.age||0,diagnoses:t})}catch(e){return console.error("Erreur lors de la r\xe9cup\xe9ration des stats :",e),o.NextResponse.json({error:"Erreur serveur"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/stats/route",pathname:"/api/stats",filename:"route",bundlePath:"app/api/stats/route"},resolvedPagePath:"/Users/macuser/Documents/GitHub/Hackathon_GL_2025/app/api/stats/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:l,serverHooks:g}=c;function x(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:l})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580],()=>t(7836));module.exports=s})();