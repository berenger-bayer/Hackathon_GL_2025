{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts à la racine de votre projet\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  // Récupérer le statut de connexion depuis le cookie ou localStorage\n  const isLoggedIn = request.cookies.get('isLoggedIn')?.value === 'true';\n  const { pathname } = request.nextUrl;\n\n  // Si l'utilisateur n'est pas connecté et qu'il essaie d'accéder à une page autre que /login\n  if (!isLoggedIn && pathname !== '/login') {\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n\n  // Si l'utilisateur est connecté et qu'il essaie d'accéder à /login\n  if (isLoggedIn && pathname === '/login') {\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n\n  return NextResponse.next();\n}\n\n// S'applique à toutes les routes sauf aux assets statiques et API\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],\n};"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAC5C;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,oEAAoE;IACpE,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe,UAAU;IAChE,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,4FAA4F;IAC5F,IAAI,CAAC,cAAc,aAAa,UAAU;QACxC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,mEAAmE;IACnE,IAAI,cAAc,aAAa,UAAU;QACvC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;AAChE"}}]
}